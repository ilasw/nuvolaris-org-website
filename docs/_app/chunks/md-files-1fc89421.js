import{S as Wi,i as Vi,s as Ji,e as s,t as l,k as u,c as a,a as r,h as o,d as t,m as d,b as _,g as n,F as e,n as we}from"./index-b3808787.js";function Lc(Wt){let E,A,P,b,T,k,w,U,S,j,le,I,D,oe,O,L,F,q,y,N,K,R,ie,C,G,$,m,M,ye,Z,Ve,W,se,H,he,je,qt,Vt,ae,g,Mt,Le,re,qe,ke,Ht,Jt,Je,Me,Qe,ee,De,ml,vt,He,ht,Ue,ne,_l,Ke,Et,mt,Oe,V,_t,Xe,Qt,Ze,bt,ge,Ce,Re,Xt,Y,wt,et,Zt,tt,bl,J,Ge,Ut,gt,ze,el,lt,Pe,Sl,ot,Q,tl,de,Kt,yt,it,kt,st,at,X,Ee,Dt,Ot,ll,Ie,rt,ol,Fe,nt,ft,me,to,ct,xe,wl,fe,z,yl,Te,Ye,ut,kl,Ct,Ne,Dl,il,ce,Rt,Gt,c,h,Ol,Be,sl,Pt,dt,Cl,It,zt,Pl,$e,pe,jl,We,al,Ll,rl,B,nl,Ft,x,ql,xt,Ml,Hl,Ae,Ul,lo,Yt,pt,oo,ue,Il,Kl,Tt,Bt,Rl,Nt,At,Gl,ve,St,zl,fl,_e,Ko,Fl,Se,Ro,Yl,Bl,Go,f,v,ri,vo,ni,$l,ho,fi,zo,te,ci,Eo,mo,ui,_o,cl,Fo,bo,di,Yo,wo,pi,Bo,$o,xl,Wo,yo,vi,hi,Vo,be,Ei,ko,mi,_i,Do,bi,Jo,io,wi,Qo,Wl,yi,Xo,Tl,ki,Oo,Di,Oi,Zo,Nl,so,Co,Ci,Pi,ao,ro,ul,go,$t,Ii,Vl,xi,Ti,Jl,Ni,Po,ei,no,Pa,Ys,Ai,Ia,Bs,Io,xa,Qi,Ta,Na,$s,dl,Aa,Xi,Sa,ja,Zi,La,qa,gi,Ma,Ha,Ws,pl,Ua,es,Ka,Ra,ts,Ga,za,ls,Fa,Ya,Vs,Al,Ba,os,$a,Wa,is,Va,Ja,ss,Qa,Js,Si,Xa,Qs,ji,Za,Xs,fo,ga,as,er,tr,rs,lr,Zs,vl,or,ns,ir,sr,fs,ar,rr,cs,nr,fr,gs,ti,Nc=`<code class="language-undefined">&#123;
  &quot;collect&quot;: &quot;.&quot;,
  &quot;install&quot;: &quot;echo nothing to install&quot;,
  &quot;build&quot;: &quot;echo nothing to build&quot;
&#125;</code>`,ea,Ql,cr,us,ur,dr,ds,pr,vr,ta,li,Ac=`<code class="language-undefined">&#123;
  &quot;collect&quot;: &quot;public&quot;,
  &quot;install&quot;: &quot;npm install&quot;,
  &quot;build&quot;: &quot;npm run build&quot;
&#125;</code>`,la,xo,hr,ps,Er,mr,oa,Li,_r,ia,Xl,To,br,vs,wr,yr,hs,kr,Dr,oi,Or,Es,Cr,Pr,Ir,qi,xr,ms,Tr,sa,jt,Nr,_s,Ar,Sr,bs,jr,Lr,ws,qr,Mr,ys,Hr,Ur,aa,Mi,Kr,ra,Hi,ks,Rr,na,No,Gr,Ds,zr,Fr,fa,Ui,Yr,ca,ii,Os,Br,$r,ua,Ki,Wr,da,hl,El,Vr,Cs,Jr,Qr,Ps,Xr,Zr,Is,gr,en,xs,tn,ln,co,on,Ts,sn,an,Ns,rn,nn,fn,Ao,cn,As,un,dn,Ss,pn,vn,So,hn,js,En,mn,Ls,_n,pa,Ri,bn;return{c(){E=s("h1"),A=l("Design"),P=u(),b=s("p"),T=s("strong"),k=l("NOTE"),w=l(" This design is work in progress and incomplete - feel free to propose improvements but "),U=s("strong"),S=l("please document the feature and send a PR to this design BEFORE implementing the feature"),j=l(" to avoid rejections and time wasted."),le=u(),I=s("h2"),D=l("Goals"),oe=u(),O=s("p"),L=l("The tool "),F=s("code"),q=l("nuv"),y=l(" built in the repo "),N=s("a"),K=l("nuvolaris-cli"),R=l(" it the Command Line Interface for the Nuvolaris project."),ie=u(),C=s("p"),G=l("It embeds the functionalities of the tool "),$=s("a"),m=l("wsk"),M=l(" for creating actions. Since wsk is written in Go, we can directly include the code in "),ye=s("code"),Z=l("nuv"),Ve=u(),W=s("p"),se=l("It embeds the functionalities of the tool "),H=s("a"),he=l("task"),je=l(" for execution actions. Since task is written in Go, we can directly include the code in "),qt=s("code"),Vt=l("nuv"),ae=u(),g=s("p"),Mt=l("It also adds some project conventions inspired by the "),Le=s("a"),re=l("nim"),qe=l(" tool. But since nim is written in typescript we do not include it, but will reimplement it. Most notably we want to reimplement the "),ke=s("a"),Ht=l("project detection"),Jt=l(" heuristic described below and nothing else."),Je=u(),Me=s("p"),Qe=l("The tool works by scanning the current subtree, looking for actions and packages to deploy. It generates a "),ee=s("code"),De=l("Taskfile"),ml=l(" (that can be inspected by the users) and then executes it."),vt=u(),He=s("p"),ht=l("It will be possible to add customizations of the task adding locally "),Ue=s("code"),ne=l("nuvolaris.yml"),_l=l(" in the various subdirectories. This functionality will be described later."),Ke=u(),Et=s("p"),mt=l("Initially, there will be 4 commands:"),Oe=u(),V=s("ul"),_t=s("li"),Xe=s("code"),Qt=l("nuv scan"),Ze=l(" scans the folder and generates a Taskfile"),bt=u(),ge=s("li"),Ce=s("code"),Re=l("nuv wsk"),Xt=l(" executes the wsk subcommand"),Y=u(),wt=s("li"),et=s("code"),Zt=l("nuv task"),tt=l(" executes the task subcommand"),bl=u(),J=s("li"),Ge=s("code"),Ut=l("nuv setup"),gt=l(" will also be able to execute a kubectl command that deploys the "),ze=s("code"),el=l("nuvolaris-operator"),lt=l(" that in turns inizializes openwhisk in any available kubernetes accessible with "),Pe=s("code"),Sl=l("kubectl"),ot=l(" and initialize the "),Q=s("code"),tl=l(".wskprops"),de=l(" file used by "),Kt=s("code"),yt=l("nuv wsk"),it=u(),kt=s("p"),st=l("The expected workflow is that:"),at=u(),X=s("ol"),Ee=s("li"),Dt=s("code"),Ot=l("nuv setup"),ll=l(" installs an openwhisk cluster using "),Ie=s("code"),rt=l("kubectl"),ol=l(" configured in the path"),Fe=u(),nt=s("li"),ft=s("code"),me=l("nuv scan"),to=l(" generates a "),ct=s("code"),xe=l("Taskfile"),wl=u(),fe=s("li"),z=s("code"),yl=l("nuv task"),Te=l(" executes the "),Ye=s("code"),ut=l("Taskfile"),kl=l(" that embeds many "),Ct=s("code"),Ne=l("nuv wsk"),Dl=l(" commands"),il=u(),ce=s("li"),Rt=l("the various "),Gt=s("code"),c=l("nuv wsk"),h=l(" create then a full project"),Ol=u(),Be=s("p"),sl=l("An example of a project to deploy can be "),Pt=s("a"),dt=l("this"),Cl=u(),It=s("h2"),zt=l("Project Detection"),Pl=u(),$e=s("p"),pe=s("code"),jl=l("nuv"),We=l(" will scan the current directory looking for a folder named "),al=s("code"),Ll=l("packages"),rl=u(),B=s("p"),nl=l("If it finds here a file, it will create a package for each subfolder."),Ft=u(),x=s("p"),ql=l("If it finds files in the file "),xt=s("code"),Ml=l("packages"),Hl=l(", it will deploy them as "),Ae=s("a"),Ul=l("single file actions"),lo=l(" in the package "),Yt=s("code"),pt=l("default"),oo=l(". If it finds files in the subfolders of "),ue=s("code"),Il=l("packages"),Kl=l(" it will deploy them as "),Tt=s("a"),Bt=l("single file actions"),Rl=l(" in packages named as the the subfolder. If it finds folders it will build "),Nt=s("a"),At=l("multi file actions"),Gl=l("."),ve=u(),St=s("h2"),zl=l("Single File Actions"),fl=u(),_e=s("p"),Ko=l("A single file actions is simply a file with an extension."),Fl=u(),Se=s("p"),Ro=l("This extension can be one of the supported ones: "),Yl=s("code"),Bl=l(".js"),Go=u(),f=s("code"),v=l(".py"),ri=u(),vo=s("code"),ni=l(".go"),$l=u(),ho=s("code"),fi=l(".java"),zo=u(),te=s("p"),ci=l("This will cause the creation of an action with "),Eo=s("code"),mo=l("--kind nodejs:default"),ui=l(", "),_o=s("code"),cl=l("--kind python:default"),Fo=l(", "),bo=s("code"),di=l("--kind go:default"),Yo=l(" and "),wo=s("code"),pi=l("--kind java:default"),Bo=l(" using the correct runtime."),$o=u(),xl=s("p"),Wo=l("The correct runtime is described by "),yo=s("code"),vi=l("runtime.json"),hi=l(" that can be downloaded from the configured api host."),Vo=u(),be=s("p"),Ei=l("If the extension is in format:  "),ko=s("code"),mi=l(".<version>.<extension>"),_i=l(", it will deploy an action of  "),Do=s("code"),bi=l("--kind <language>:<version>"),Jo=u(),io=s("h2"),wi=l("Static frontend"),Qo=u(),Wl=s("p"),yi=l("Nuv is also able to deploy static frontends. A static front-end is a collection of static asset under a given folder that will be published in a web server under a path."),Xo=u(),Tl=s("p"),ki=l("A folder containing static (web) assets is always named "),Oo=s("code"),Di=l("web"),Oi=l(" and can be placed in different parts in the folder hierarchy. The path in the website where is published depends on the location in the hierarchy, as described below."),Zo=u(),Nl=s("p"),so=l("Before publishing, "),Co=s("code"),Ci=l("nuv"),Pi=l(" executes some build commands."),ao=u(),ro=s("h3"),ul=l("Hostname"),go=u(),$t=s("p"),Ii=l("In general, for each namespace there will be a "),Vl=s("code"),xi=l("https://<namespace>.<domain>"),Ti=l(" website where to publish the resources. For the local deployment there will be a website "),Jl=s("code"),Ni=l("http://127.0.0.1:8080"),Po=l(" where the resources are published, with the namespace and the domain ignored."),ei=u(),no=s("h3"),Pa=l("Path detection"),Ys=u(),Ai=s("p"),Ia=l("The path where the assets are published depends on the path in the action hierarchy."),Bs=u(),Io=s("p"),xa=l("The sub-folder "),Qi=s("code"),Ta=l("web"),Na=l(" is published as \u201D/\u201C."),$s=u(),dl=s("p"),Aa=l("Any subfolder "),Xi=s("code"),Sa=l("web"),ja=l(" under "),Zi=s("code"),La=l("packages/<package>/web"),qa=l(" is published unser "),gi=s("code"),Ma=l("/<packages>/"),Ha=l("."),Ws=u(),pl=s("p"),Ua=l("Any subfolder "),es=s("code"),Ka=l("web"),Ra=l(" under "),ts=s("code"),Ga=l("packages/default/<action>\\web"),za=l(" is published as "),ls=s("code"),Fa=l("/<action>"),Ya=l("."),Vs=u(),Al=s("p"),Ba=l("Any subfolder "),os=s("code"),$a=l("web"),Wa=l(" under "),is=s("code"),Va=l("packages/<package>/<action>/web"),Ja=l(" is published as "),ss=s("code"),Qa=l("/<package>/<action>"),Js=u(),Si=s("p"),Xa=l("What is published (files collected) and how it is built is defined by the next paragraph."),Qs=u(),ji=s("h3"),Za=l("Building and Collecting"),Xs=u(),fo=s("p"),ga=l("In every folder "),as=s("code"),er=l("web"),tr=l(" it will check if there is a "),rs=s("code"),lr=l("nuvolaris.json"),Zs=u(),vl=s("p"),or=l("If there is not a "),ns=s("code"),ir=l("nuvolaris.json"),sr=l(" and not a "),fs=s("code"),ar=l("package.json"),rr=l(" it will assume this base "),cs=s("code"),nr=l("nuvolaris.json"),fr=l(":"),gs=u(),ti=s("pre"),ea=u(),Ql=s("p"),cr=l("If instead there is "),us=s("code"),ur=l("packages.json"),dr=l(", it will assume this base "),ds=s("code"),pr=l("nuvolaris.json"),vr=l(":"),ta=u(),li=s("pre"),la=u(),xo=s("p"),hr=l("The it will read the "),ps=s("code"),Er=l("nuvolaris.json"),mr=l(" replacing the keys in it with the default ones."),oa=u(),Li=s("p"),_r=l("The generated taskfile will execute at deployment step:"),ia=u(),Xl=s("ul"),To=s("li"),br=l("the command defined by "),vs=s("code"),wr=l("install"),yr=l(" only if there is not a "),hs=s("code"),kr=l("node_modules"),Dr=u(),oi=s("li"),Or=l("the command defined by "),Es=s("code"),Cr=l("build"),Pr=l(" always"),Ir=u(),qi=s("li"),xr=l("then it will collect for publishing (creating a crd instance) the files in the folder defined by "),ms=s("code"),Tr=l("collect"),sa=u(),jt=s("p"),Nr=l("It is recommended that "),_s=s("code"),Ar=l("nuv scan"),Sr=l(" does not execute directy the command but instead it delegates to another command like "),bs=s("code"),jr=l("nuv build"),Lr=l(" and in turn the creation of "),ws=s("code"),qr=l("crd"),Mr=l(" to another "),ys=s("code"),Hr=l("nuv crd"),Ur=l(" subcommand, after changing to the corresponding suddirectory. All those commands should work by default in current directory."),aa=u(),Mi=s("h2"),Kr=l("Multi File Actions"),ra=u(),Hi=s("p"),ks=s("strong"),Rr=l("initial draft"),na=u(),No=s("p"),Gr=l("A multi-file action is stored in a subfolder of a subfolder of "),Ds=s("code"),zr=l("packages"),Fr=l("."),fa=u(),Ui=s("p"),Yr=l("This is expected to be a file to build."),ca=u(),ii=s("p"),Os=s("code"),Br=l("nuv"),$r=l(" implements some heuristics to decide the correct type of the file to build."),ua=u(),Ki=s("p"),Wr=l("Currently:"),da=u(),hl=s("ul"),El=s("li"),Vr=l("if there is a "),Cs=s("code"),Jr=l("package.json"),Qr=l("  or any "),Ps=s("code"),Xr=l("js"),Zr=l(" field in the folder then it is  "),Is=s("code"),gr=l(".js"),en=l(" and it builds with "),xs=s("code"),tn=l("npm install ; npm build"),ln=u(),co=s("li"),on=l("if there is a "),Ts=s("code"),sn=l("requirements.txt"),an=l(" or any "),Ns=s("code"),rn=l(".py"),nn=l(" file then it is python and it builds creating a virtual env as described in the python runtime documentation"),fn=u(),Ao=s("li"),cn=l("if there is "),As=s("code"),un=l("pom.xml"),dn=l(" then it builds using "),Ss=s("code"),pn=l("mvn install"),vn=u(),So=s("li"),hn=l("if there is a "),js=s("code"),En=l("go.mod"),mn=l(" then it builds using "),Ls=s("code"),_n=l("go build"),pa=u(),Ri=s("p"),bn=l("then it will zip the folder and send as an action of the current type to the runtime."),this.h()},l(i){E=a(i,"H1",{});var p=r(E);A=o(p,"Design"),p.forEach(t),P=d(i),b=a(i,"P",{});var qs=r(b);T=a(qs,"STRONG",{});var Pn=r(T);k=o(Pn,"NOTE"),Pn.forEach(t),w=o(qs," This design is work in progress and incomplete - feel free to propose improvements but "),U=a(qs,"STRONG",{});var In=r(U);S=o(In,"please document the feature and send a PR to this design BEFORE implementing the feature"),In.forEach(t),j=o(qs," to avoid rejections and time wasted."),qs.forEach(t),le=d(i),I=a(i,"H2",{});var xn=r(I);D=o(xn,"Goals"),xn.forEach(t),oe=d(i),O=a(i,"P",{});var Gi=r(O);L=o(Gi,"The tool "),F=a(Gi,"CODE",{});var Tn=r(F);q=o(Tn,"nuv"),Tn.forEach(t),y=o(Gi," built in the repo "),N=a(Gi,"A",{href:!0,rel:!0});var Nn=r(N);K=o(Nn,"nuvolaris-cli"),Nn.forEach(t),R=o(Gi," it the Command Line Interface for the Nuvolaris project."),Gi.forEach(t),ie=d(i),C=a(i,"P",{});var Ms=r(C);G=o(Ms,"It embeds the functionalities of the tool "),$=a(Ms,"A",{href:!0,rel:!0});var An=r($);m=o(An,"wsk"),An.forEach(t),M=o(Ms," for creating actions. Since wsk is written in Go, we can directly include the code in "),ye=a(Ms,"CODE",{});var Sn=r(ye);Z=o(Sn,"nuv"),Sn.forEach(t),Ms.forEach(t),Ve=d(i),W=a(i,"P",{});var Hs=r(W);se=o(Hs,"It embeds the functionalities of the tool "),H=a(Hs,"A",{href:!0,rel:!0});var jn=r(H);he=o(jn,"task"),jn.forEach(t),je=o(Hs," for execution actions. Since task is written in Go, we can directly include the code in "),qt=a(Hs,"CODE",{});var Ln=r(qt);Vt=o(Ln,"nuv"),Ln.forEach(t),Hs.forEach(t),ae=d(i),g=a(i,"P",{});var zi=r(g);Mt=o(zi,"It also adds some project conventions inspired by the "),Le=a(zi,"A",{href:!0,rel:!0});var qn=r(Le);re=o(qn,"nim"),qn.forEach(t),qe=o(zi," tool. But since nim is written in typescript we do not include it, but will reimplement it. Most notably we want to reimplement the "),ke=a(zi,"A",{href:!0});var Mn=r(ke);Ht=o(Mn,"project detection"),Mn.forEach(t),Jt=o(zi," heuristic described below and nothing else."),zi.forEach(t),Je=d(i),Me=a(i,"P",{});var va=r(Me);Qe=o(va,"The tool works by scanning the current subtree, looking for actions and packages to deploy. It generates a "),ee=a(va,"CODE",{});var Hn=r(ee);De=o(Hn,"Taskfile"),Hn.forEach(t),ml=o(va," (that can be inspected by the users) and then executes it."),va.forEach(t),vt=d(i),He=a(i,"P",{});var ha=r(He);ht=o(ha,"It will be possible to add customizations of the task adding locally "),Ue=a(ha,"CODE",{});var Un=r(Ue);ne=o(Un,"nuvolaris.yml"),Un.forEach(t),_l=o(ha," in the various subdirectories. This functionality will be described later."),ha.forEach(t),Ke=d(i),Et=a(i,"P",{});var Kn=r(Et);mt=o(Kn,"Initially, there will be 4 commands:"),Kn.forEach(t),Oe=d(i),V=a(i,"UL",{});var jo=r(V);_t=a(jo,"LI",{});var wn=r(_t);Xe=a(wn,"CODE",{});var Rn=r(Xe);Qt=o(Rn,"nuv scan"),Rn.forEach(t),Ze=o(wn," scans the folder and generates a Taskfile"),wn.forEach(t),bt=d(jo),ge=a(jo,"LI",{});var yn=r(ge);Ce=a(yn,"CODE",{});var Gn=r(Ce);Re=o(Gn,"nuv wsk"),Gn.forEach(t),Xt=o(yn," executes the wsk subcommand"),yn.forEach(t),Y=d(jo),wt=a(jo,"LI",{});var kn=r(wt);et=a(kn,"CODE",{});var zn=r(et);Zt=o(zn,"nuv task"),zn.forEach(t),tt=o(kn," executes the task subcommand"),kn.forEach(t),bl=d(jo),J=a(jo,"LI",{});var Zl=r(J);Ge=a(Zl,"CODE",{});var Fn=r(Ge);Ut=o(Fn,"nuv setup"),Fn.forEach(t),gt=o(Zl," will also be able to execute a kubectl command that deploys the "),ze=a(Zl,"CODE",{});var Yn=r(ze);el=o(Yn,"nuvolaris-operator"),Yn.forEach(t),lt=o(Zl," that in turns inizializes openwhisk in any available kubernetes accessible with "),Pe=a(Zl,"CODE",{});var Bn=r(Pe);Sl=o(Bn,"kubectl"),Bn.forEach(t),ot=o(Zl," and initialize the "),Q=a(Zl,"CODE",{});var $n=r(Q);tl=o($n,".wskprops"),$n.forEach(t),de=o(Zl," file used by "),Kt=a(Zl,"CODE",{});var Wn=r(Kt);yt=o(Wn,"nuv wsk"),Wn.forEach(t),Zl.forEach(t),jo.forEach(t),it=d(i),kt=a(i,"P",{});var Vn=r(kt);st=o(Vn,"The expected workflow is that:"),Vn.forEach(t),at=d(i),X=a(i,"OL",{});var Lo=r(X);Ee=a(Lo,"LI",{});var Us=r(Ee);Dt=a(Us,"CODE",{});var Jn=r(Dt);Ot=o(Jn,"nuv setup"),Jn.forEach(t),ll=o(Us," installs an openwhisk cluster using "),Ie=a(Us,"CODE",{});var Qn=r(Ie);rt=o(Qn,"kubectl"),Qn.forEach(t),ol=o(Us," configured in the path"),Us.forEach(t),Fe=d(Lo),nt=a(Lo,"LI",{});var Ea=r(nt);ft=a(Ea,"CODE",{});var Xn=r(ft);me=o(Xn,"nuv scan"),Xn.forEach(t),to=o(Ea," generates a "),ct=a(Ea,"CODE",{});var Zn=r(ct);xe=o(Zn,"Taskfile"),Zn.forEach(t),Ea.forEach(t),wl=d(Lo),fe=a(Lo,"LI",{});var si=r(fe);z=a(si,"CODE",{});var gn=r(z);yl=o(gn,"nuv task"),gn.forEach(t),Te=o(si," executes the "),Ye=a(si,"CODE",{});var ef=r(Ye);ut=o(ef,"Taskfile"),ef.forEach(t),kl=o(si," that embeds many "),Ct=a(si,"CODE",{});var tf=r(Ct);Ne=o(tf,"nuv wsk"),tf.forEach(t),Dl=o(si," commands"),si.forEach(t),il=d(Lo),ce=a(Lo,"LI",{});var ma=r(ce);Rt=o(ma,"the various "),Gt=a(ma,"CODE",{});var lf=r(Gt);c=o(lf,"nuv wsk"),lf.forEach(t),h=o(ma," create then a full project"),ma.forEach(t),Lo.forEach(t),Ol=d(i),Be=a(i,"P",{});var Dn=r(Be);sl=o(Dn,"An example of a project to deploy can be "),Pt=a(Dn,"A",{href:!0,rel:!0});var of=r(Pt);dt=o(of,"this"),of.forEach(t),Dn.forEach(t),Cl=d(i),It=a(i,"H2",{});var sf=r(It);zt=o(sf,"Project Detection"),sf.forEach(t),Pl=d(i),$e=a(i,"P",{});var _a=r($e);pe=a(_a,"CODE",{});var af=r(pe);jl=o(af,"nuv"),af.forEach(t),We=o(_a," will scan the current directory looking for a folder named "),al=a(_a,"CODE",{});var rf=r(al);Ll=o(rf,"packages"),rf.forEach(t),_a.forEach(t),rl=d(i),B=a(i,"P",{});var nf=r(B);nl=o(nf,"If it finds here a file, it will create a package for each subfolder."),nf.forEach(t),Ft=d(i),x=a(i,"P",{});var Lt=r(x);ql=o(Lt,"If it finds files in the file "),xt=a(Lt,"CODE",{});var ff=r(xt);Ml=o(ff,"packages"),ff.forEach(t),Hl=o(Lt,", it will deploy them as "),Ae=a(Lt,"A",{href:!0});var cf=r(Ae);Ul=o(cf,"single file actions"),cf.forEach(t),lo=o(Lt," in the package "),Yt=a(Lt,"CODE",{});var uf=r(Yt);pt=o(uf,"default"),uf.forEach(t),oo=o(Lt,". If it finds files in the subfolders of "),ue=a(Lt,"CODE",{});var df=r(ue);Il=o(df,"packages"),df.forEach(t),Kl=o(Lt," it will deploy them as "),Tt=a(Lt,"A",{href:!0});var pf=r(Tt);Bt=o(pf,"single file actions"),pf.forEach(t),Rl=o(Lt," in packages named as the the subfolder. If it finds folders it will build "),Nt=a(Lt,"A",{href:!0});var vf=r(Nt);At=o(vf,"multi file actions"),vf.forEach(t),Gl=o(Lt,"."),Lt.forEach(t),ve=d(i),St=a(i,"H2",{});var hf=r(St);zl=o(hf,"Single File Actions"),hf.forEach(t),fl=d(i),_e=a(i,"P",{});var Ef=r(_e);Ko=o(Ef,"A single file actions is simply a file with an extension."),Ef.forEach(t),Fl=d(i),Se=a(i,"P",{});var uo=r(Se);Ro=o(uo,"This extension can be one of the supported ones: "),Yl=a(uo,"CODE",{});var mf=r(Yl);Bl=o(mf,".js"),mf.forEach(t),Go=d(uo),f=a(uo,"CODE",{});var _f=r(f);v=o(_f,".py"),_f.forEach(t),ri=d(uo),vo=a(uo,"CODE",{});var bf=r(vo);ni=o(bf,".go"),bf.forEach(t),$l=d(uo),ho=a(uo,"CODE",{});var wf=r(ho);fi=o(wf,".java"),wf.forEach(t),uo.forEach(t),zo=d(i),te=a(i,"P",{});var gl=r(te);ci=o(gl,"This will cause the creation of an action with "),Eo=a(gl,"CODE",{});var yf=r(Eo);mo=o(yf,"--kind nodejs:default"),yf.forEach(t),ui=o(gl,", "),_o=a(gl,"CODE",{});var kf=r(_o);cl=o(kf,"--kind python:default"),kf.forEach(t),Fo=o(gl,", "),bo=a(gl,"CODE",{});var Df=r(bo);di=o(Df,"--kind go:default"),Df.forEach(t),Yo=o(gl," and "),wo=a(gl,"CODE",{});var Of=r(wo);pi=o(Of,"--kind java:default"),Of.forEach(t),Bo=o(gl," using the correct runtime."),gl.forEach(t),$o=d(i),xl=a(i,"P",{});var ba=r(xl);Wo=o(ba,"The correct runtime is described by "),yo=a(ba,"CODE",{});var Cf=r(yo);vi=o(Cf,"runtime.json"),Cf.forEach(t),hi=o(ba," that can be downloaded from the configured api host."),ba.forEach(t),Vo=d(i),be=a(i,"P",{});var Ks=r(be);Ei=o(Ks,"If the extension is in format:  "),ko=a(Ks,"CODE",{});var Pf=r(ko);mi=o(Pf,".<version>.<extension>"),Pf.forEach(t),_i=o(Ks,", it will deploy an action of  "),Do=a(Ks,"CODE",{});var If=r(Do);bi=o(If,"--kind <language>:<version>"),If.forEach(t),Ks.forEach(t),Jo=d(i),io=a(i,"H2",{});var xf=r(io);wi=o(xf,"Static frontend"),xf.forEach(t),Qo=d(i),Wl=a(i,"P",{});var Tf=r(Wl);yi=o(Tf,"Nuv is also able to deploy static frontends. A static front-end is a collection of static asset under a given folder that will be published in a web server under a path."),Tf.forEach(t),Xo=d(i),Tl=a(i,"P",{});var wa=r(Tl);ki=o(wa,"A folder containing static (web) assets is always named "),Oo=a(wa,"CODE",{});var Nf=r(Oo);Di=o(Nf,"web"),Nf.forEach(t),Oi=o(wa," and can be placed in different parts in the folder hierarchy. The path in the website where is published depends on the location in the hierarchy, as described below."),wa.forEach(t),Zo=d(i),Nl=a(i,"P",{});var ya=r(Nl);so=o(ya,"Before publishing, "),Co=a(ya,"CODE",{});var Af=r(Co);Ci=o(Af,"nuv"),Af.forEach(t),Pi=o(ya," executes some build commands."),ya.forEach(t),ao=d(i),ro=a(i,"H3",{});var Sf=r(ro);ul=o(Sf,"Hostname"),Sf.forEach(t),go=d(i),$t=a(i,"P",{});var Fi=r($t);Ii=o(Fi,"In general, for each namespace there will be a "),Vl=a(Fi,"CODE",{});var jf=r(Vl);xi=o(jf,"https://<namespace>.<domain>"),jf.forEach(t),Ti=o(Fi," website where to publish the resources. For the local deployment there will be a website "),Jl=a(Fi,"CODE",{});var Lf=r(Jl);Ni=o(Lf,"http://127.0.0.1:8080"),Lf.forEach(t),Po=o(Fi," where the resources are published, with the namespace and the domain ignored."),Fi.forEach(t),ei=d(i),no=a(i,"H3",{});var qf=r(no);Pa=o(qf,"Path detection"),qf.forEach(t),Ys=d(i),Ai=a(i,"P",{});var Mf=r(Ai);Ia=o(Mf,"The path where the assets are published depends on the path in the action hierarchy."),Mf.forEach(t),Bs=d(i),Io=a(i,"P",{});var ka=r(Io);xa=o(ka,"The sub-folder "),Qi=a(ka,"CODE",{});var Hf=r(Qi);Ta=o(Hf,"web"),Hf.forEach(t),Na=o(ka," is published as \u201D/\u201C."),ka.forEach(t),$s=d(i),dl=a(i,"P",{});var qo=r(dl);Aa=o(qo,"Any subfolder "),Xi=a(qo,"CODE",{});var Uf=r(Xi);Sa=o(Uf,"web"),Uf.forEach(t),ja=o(qo," under "),Zi=a(qo,"CODE",{});var Kf=r(Zi);La=o(Kf,"packages/<package>/web"),Kf.forEach(t),qa=o(qo," is published unser "),gi=a(qo,"CODE",{});var Rf=r(gi);Ma=o(Rf,"/<packages>/"),Rf.forEach(t),Ha=o(qo,"."),qo.forEach(t),Ws=d(i),pl=a(i,"P",{});var Mo=r(pl);Ua=o(Mo,"Any subfolder "),es=a(Mo,"CODE",{});var Gf=r(es);Ka=o(Gf,"web"),Gf.forEach(t),Ra=o(Mo," under "),ts=a(Mo,"CODE",{});var zf=r(ts);Ga=o(zf,"packages/default/<action>\\web"),zf.forEach(t),za=o(Mo," is published as "),ls=a(Mo,"CODE",{});var Ff=r(ls);Fa=o(Ff,"/<action>"),Ff.forEach(t),Ya=o(Mo,"."),Mo.forEach(t),Vs=d(i),Al=a(i,"P",{});var ai=r(Al);Ba=o(ai,"Any subfolder "),os=a(ai,"CODE",{});var Yf=r(os);$a=o(Yf,"web"),Yf.forEach(t),Wa=o(ai," under "),is=a(ai,"CODE",{});var Bf=r(is);Va=o(Bf,"packages/<package>/<action>/web"),Bf.forEach(t),Ja=o(ai," is published as "),ss=a(ai,"CODE",{});var $f=r(ss);Qa=o($f,"/<package>/<action>"),$f.forEach(t),ai.forEach(t),Js=d(i),Si=a(i,"P",{});var Wf=r(Si);Xa=o(Wf,"What is published (files collected) and how it is built is defined by the next paragraph."),Wf.forEach(t),Qs=d(i),ji=a(i,"H3",{});var Vf=r(ji);Za=o(Vf,"Building and Collecting"),Vf.forEach(t),Xs=d(i),fo=a(i,"P",{});var Rs=r(fo);ga=o(Rs,"In every folder "),as=a(Rs,"CODE",{});var Jf=r(as);er=o(Jf,"web"),Jf.forEach(t),tr=o(Rs," it will check if there is a "),rs=a(Rs,"CODE",{});var Qf=r(rs);lr=o(Qf,"nuvolaris.json"),Qf.forEach(t),Rs.forEach(t),Zs=d(i),vl=a(i,"P",{});var Ho=r(vl);or=o(Ho,"If there is not a "),ns=a(Ho,"CODE",{});var Xf=r(ns);ir=o(Xf,"nuvolaris.json"),Xf.forEach(t),sr=o(Ho," and not a "),fs=a(Ho,"CODE",{});var Zf=r(fs);ar=o(Zf,"package.json"),Zf.forEach(t),rr=o(Ho," it will assume this base "),cs=a(Ho,"CODE",{});var gf=r(cs);nr=o(gf,"nuvolaris.json"),gf.forEach(t),fr=o(Ho,":"),Ho.forEach(t),gs=d(i),ti=a(i,"PRE",{class:!0});var Sc=r(ti);Sc.forEach(t),ea=d(i),Ql=a(i,"P",{});var Yi=r(Ql);cr=o(Yi,"If instead there is "),us=a(Yi,"CODE",{});var ec=r(us);ur=o(ec,"packages.json"),ec.forEach(t),dr=o(Yi,", it will assume this base "),ds=a(Yi,"CODE",{});var tc=r(ds);pr=o(tc,"nuvolaris.json"),tc.forEach(t),vr=o(Yi,":"),Yi.forEach(t),ta=d(i),li=a(i,"PRE",{class:!0});var jc=r(li);jc.forEach(t),la=d(i),xo=a(i,"P",{});var Da=r(xo);hr=o(Da,"The it will read the "),ps=a(Da,"CODE",{});var lc=r(ps);Er=o(lc,"nuvolaris.json"),lc.forEach(t),mr=o(Da," replacing the keys in it with the default ones."),Da.forEach(t),oa=d(i),Li=a(i,"P",{});var oc=r(Li);_r=o(oc,"The generated taskfile will execute at deployment step:"),oc.forEach(t),ia=d(i),Xl=a(i,"UL",{});var Bi=r(Xl);To=a(Bi,"LI",{});var Gs=r(To);br=o(Gs,"the command defined by "),vs=a(Gs,"CODE",{});var ic=r(vs);wr=o(ic,"install"),ic.forEach(t),yr=o(Gs," only if there is not a "),hs=a(Gs,"CODE",{});var sc=r(hs);kr=o(sc,"node_modules"),sc.forEach(t),Gs.forEach(t),Dr=d(Bi),oi=a(Bi,"LI",{});var Oa=r(oi);Or=o(Oa,"the command defined by "),Es=a(Oa,"CODE",{});var ac=r(Es);Cr=o(ac,"build"),ac.forEach(t),Pr=o(Oa," always"),Oa.forEach(t),Ir=d(Bi),qi=a(Bi,"LI",{});var On=r(qi);xr=o(On,"then it will collect for publishing (creating a crd instance) the files in the folder defined by "),ms=a(On,"CODE",{});var rc=r(ms);Tr=o(rc,"collect"),rc.forEach(t),On.forEach(t),Bi.forEach(t),sa=d(i),jt=a(i,"P",{});var eo=r(jt);Nr=o(eo,"It is recommended that "),_s=a(eo,"CODE",{});var nc=r(_s);Ar=o(nc,"nuv scan"),nc.forEach(t),Sr=o(eo," does not execute directy the command but instead it delegates to another command like "),bs=a(eo,"CODE",{});var fc=r(bs);jr=o(fc,"nuv build"),fc.forEach(t),Lr=o(eo," and in turn the creation of "),ws=a(eo,"CODE",{});var cc=r(ws);qr=o(cc,"crd"),cc.forEach(t),Mr=o(eo," to another "),ys=a(eo,"CODE",{});var uc=r(ys);Hr=o(uc,"nuv crd"),uc.forEach(t),Ur=o(eo," subcommand, after changing to the corresponding suddirectory. All those commands should work by default in current directory."),eo.forEach(t),aa=d(i),Mi=a(i,"H2",{});var dc=r(Mi);Kr=o(dc,"Multi File Actions"),dc.forEach(t),ra=d(i),Hi=a(i,"P",{});var pc=r(Hi);ks=a(pc,"STRONG",{});var vc=r(ks);Rr=o(vc,"initial draft"),vc.forEach(t),pc.forEach(t),na=d(i),No=a(i,"P",{});var Ca=r(No);Gr=o(Ca,"A multi-file action is stored in a subfolder of a subfolder of "),Ds=a(Ca,"CODE",{});var hc=r(Ds);zr=o(hc,"packages"),hc.forEach(t),Fr=o(Ca,"."),Ca.forEach(t),fa=d(i),Ui=a(i,"P",{});var Ec=r(Ui);Yr=o(Ec,"This is expected to be a file to build."),Ec.forEach(t),ca=d(i),ii=a(i,"P",{});var Cn=r(ii);Os=a(Cn,"CODE",{});var mc=r(Os);Br=o(mc,"nuv"),mc.forEach(t),$r=o(Cn," implements some heuristics to decide the correct type of the file to build."),Cn.forEach(t),ua=d(i),Ki=a(i,"P",{});var _c=r(Ki);Wr=o(_c,"Currently:"),_c.forEach(t),da=d(i),hl=a(i,"UL",{});var Uo=r(hl);El=a(Uo,"LI",{});var po=r(El);Vr=o(po,"if there is a "),Cs=a(po,"CODE",{});var bc=r(Cs);Jr=o(bc,"package.json"),bc.forEach(t),Qr=o(po,"  or any "),Ps=a(po,"CODE",{});var wc=r(Ps);Xr=o(wc,"js"),wc.forEach(t),Zr=o(po," field in the folder then it is  "),Is=a(po,"CODE",{});var yc=r(Is);gr=o(yc,".js"),yc.forEach(t),en=o(po," and it builds with "),xs=a(po,"CODE",{});var kc=r(xs);tn=o(kc,"npm install ; npm build"),kc.forEach(t),po.forEach(t),ln=d(Uo),co=a(Uo,"LI",{});var $i=r(co);on=o($i,"if there is a "),Ts=a($i,"CODE",{});var Dc=r(Ts);sn=o(Dc,"requirements.txt"),Dc.forEach(t),an=o($i," or any "),Ns=a($i,"CODE",{});var Oc=r(Ns);rn=o(Oc,".py"),Oc.forEach(t),nn=o($i," file then it is python and it builds creating a virtual env as described in the python runtime documentation"),$i.forEach(t),fn=d(Uo),Ao=a(Uo,"LI",{});var zs=r(Ao);cn=o(zs,"if there is "),As=a(zs,"CODE",{});var Cc=r(As);un=o(Cc,"pom.xml"),Cc.forEach(t),dn=o(zs," then it builds using "),Ss=a(zs,"CODE",{});var Pc=r(Ss);pn=o(Pc,"mvn install"),Pc.forEach(t),zs.forEach(t),vn=d(Uo),So=a(Uo,"LI",{});var Fs=r(So);hn=o(Fs,"if there is a "),js=a(Fs,"CODE",{});var Ic=r(js);En=o(Ic,"go.mod"),Ic.forEach(t),mn=o(Fs," then it builds using "),Ls=a(Fs,"CODE",{});var xc=r(Ls);_n=o(xc,"go build"),xc.forEach(t),Fs.forEach(t),Uo.forEach(t),pa=d(i),Ri=a(i,"P",{});var Tc=r(Ri);bn=o(Tc,"then it will zip the folder and send as an action of the current type to the runtime."),Tc.forEach(t),this.h()},h(){_(N,"href","https://github.com/nuvolaris/nuvolaris-cli"),_(N,"rel","nofollow"),_($,"href","https://github.com/apache/openwhisk-cli"),_($,"rel","nofollow"),_(H,"href","https://taskfile.dev"),_(H,"rel","nofollow"),_(Le,"href","https://github.com/nimbella/nimbella-cli"),_(Le,"rel","nofollow"),_(ke,"href","#project-detection"),_(Pt,"href","https://github.com/pagopa/io-sdk/tree/master/admin"),_(Pt,"rel","nofollow"),_(Ae,"href","#single-file-actions"),_(Tt,"href","#single-file-actions"),_(Nt,"href","#multi-file-actions"),_(ti,"class","language-undefined"),_(li,"class","language-undefined")},m(i,p){n(i,E,p),e(E,A),n(i,P,p),n(i,b,p),e(b,T),e(T,k),e(b,w),e(b,U),e(U,S),e(b,j),n(i,le,p),n(i,I,p),e(I,D),n(i,oe,p),n(i,O,p),e(O,L),e(O,F),e(F,q),e(O,y),e(O,N),e(N,K),e(O,R),n(i,ie,p),n(i,C,p),e(C,G),e(C,$),e($,m),e(C,M),e(C,ye),e(ye,Z),n(i,Ve,p),n(i,W,p),e(W,se),e(W,H),e(H,he),e(W,je),e(W,qt),e(qt,Vt),n(i,ae,p),n(i,g,p),e(g,Mt),e(g,Le),e(Le,re),e(g,qe),e(g,ke),e(ke,Ht),e(g,Jt),n(i,Je,p),n(i,Me,p),e(Me,Qe),e(Me,ee),e(ee,De),e(Me,ml),n(i,vt,p),n(i,He,p),e(He,ht),e(He,Ue),e(Ue,ne),e(He,_l),n(i,Ke,p),n(i,Et,p),e(Et,mt),n(i,Oe,p),n(i,V,p),e(V,_t),e(_t,Xe),e(Xe,Qt),e(_t,Ze),e(V,bt),e(V,ge),e(ge,Ce),e(Ce,Re),e(ge,Xt),e(V,Y),e(V,wt),e(wt,et),e(et,Zt),e(wt,tt),e(V,bl),e(V,J),e(J,Ge),e(Ge,Ut),e(J,gt),e(J,ze),e(ze,el),e(J,lt),e(J,Pe),e(Pe,Sl),e(J,ot),e(J,Q),e(Q,tl),e(J,de),e(J,Kt),e(Kt,yt),n(i,it,p),n(i,kt,p),e(kt,st),n(i,at,p),n(i,X,p),e(X,Ee),e(Ee,Dt),e(Dt,Ot),e(Ee,ll),e(Ee,Ie),e(Ie,rt),e(Ee,ol),e(X,Fe),e(X,nt),e(nt,ft),e(ft,me),e(nt,to),e(nt,ct),e(ct,xe),e(X,wl),e(X,fe),e(fe,z),e(z,yl),e(fe,Te),e(fe,Ye),e(Ye,ut),e(fe,kl),e(fe,Ct),e(Ct,Ne),e(fe,Dl),e(X,il),e(X,ce),e(ce,Rt),e(ce,Gt),e(Gt,c),e(ce,h),n(i,Ol,p),n(i,Be,p),e(Be,sl),e(Be,Pt),e(Pt,dt),n(i,Cl,p),n(i,It,p),e(It,zt),n(i,Pl,p),n(i,$e,p),e($e,pe),e(pe,jl),e($e,We),e($e,al),e(al,Ll),n(i,rl,p),n(i,B,p),e(B,nl),n(i,Ft,p),n(i,x,p),e(x,ql),e(x,xt),e(xt,Ml),e(x,Hl),e(x,Ae),e(Ae,Ul),e(x,lo),e(x,Yt),e(Yt,pt),e(x,oo),e(x,ue),e(ue,Il),e(x,Kl),e(x,Tt),e(Tt,Bt),e(x,Rl),e(x,Nt),e(Nt,At),e(x,Gl),n(i,ve,p),n(i,St,p),e(St,zl),n(i,fl,p),n(i,_e,p),e(_e,Ko),n(i,Fl,p),n(i,Se,p),e(Se,Ro),e(Se,Yl),e(Yl,Bl),e(Se,Go),e(Se,f),e(f,v),e(Se,ri),e(Se,vo),e(vo,ni),e(Se,$l),e(Se,ho),e(ho,fi),n(i,zo,p),n(i,te,p),e(te,ci),e(te,Eo),e(Eo,mo),e(te,ui),e(te,_o),e(_o,cl),e(te,Fo),e(te,bo),e(bo,di),e(te,Yo),e(te,wo),e(wo,pi),e(te,Bo),n(i,$o,p),n(i,xl,p),e(xl,Wo),e(xl,yo),e(yo,vi),e(xl,hi),n(i,Vo,p),n(i,be,p),e(be,Ei),e(be,ko),e(ko,mi),e(be,_i),e(be,Do),e(Do,bi),n(i,Jo,p),n(i,io,p),e(io,wi),n(i,Qo,p),n(i,Wl,p),e(Wl,yi),n(i,Xo,p),n(i,Tl,p),e(Tl,ki),e(Tl,Oo),e(Oo,Di),e(Tl,Oi),n(i,Zo,p),n(i,Nl,p),e(Nl,so),e(Nl,Co),e(Co,Ci),e(Nl,Pi),n(i,ao,p),n(i,ro,p),e(ro,ul),n(i,go,p),n(i,$t,p),e($t,Ii),e($t,Vl),e(Vl,xi),e($t,Ti),e($t,Jl),e(Jl,Ni),e($t,Po),n(i,ei,p),n(i,no,p),e(no,Pa),n(i,Ys,p),n(i,Ai,p),e(Ai,Ia),n(i,Bs,p),n(i,Io,p),e(Io,xa),e(Io,Qi),e(Qi,Ta),e(Io,Na),n(i,$s,p),n(i,dl,p),e(dl,Aa),e(dl,Xi),e(Xi,Sa),e(dl,ja),e(dl,Zi),e(Zi,La),e(dl,qa),e(dl,gi),e(gi,Ma),e(dl,Ha),n(i,Ws,p),n(i,pl,p),e(pl,Ua),e(pl,es),e(es,Ka),e(pl,Ra),e(pl,ts),e(ts,Ga),e(pl,za),e(pl,ls),e(ls,Fa),e(pl,Ya),n(i,Vs,p),n(i,Al,p),e(Al,Ba),e(Al,os),e(os,$a),e(Al,Wa),e(Al,is),e(is,Va),e(Al,Ja),e(Al,ss),e(ss,Qa),n(i,Js,p),n(i,Si,p),e(Si,Xa),n(i,Qs,p),n(i,ji,p),e(ji,Za),n(i,Xs,p),n(i,fo,p),e(fo,ga),e(fo,as),e(as,er),e(fo,tr),e(fo,rs),e(rs,lr),n(i,Zs,p),n(i,vl,p),e(vl,or),e(vl,ns),e(ns,ir),e(vl,sr),e(vl,fs),e(fs,ar),e(vl,rr),e(vl,cs),e(cs,nr),e(vl,fr),n(i,gs,p),n(i,ti,p),ti.innerHTML=Nc,n(i,ea,p),n(i,Ql,p),e(Ql,cr),e(Ql,us),e(us,ur),e(Ql,dr),e(Ql,ds),e(ds,pr),e(Ql,vr),n(i,ta,p),n(i,li,p),li.innerHTML=Ac,n(i,la,p),n(i,xo,p),e(xo,hr),e(xo,ps),e(ps,Er),e(xo,mr),n(i,oa,p),n(i,Li,p),e(Li,_r),n(i,ia,p),n(i,Xl,p),e(Xl,To),e(To,br),e(To,vs),e(vs,wr),e(To,yr),e(To,hs),e(hs,kr),e(Xl,Dr),e(Xl,oi),e(oi,Or),e(oi,Es),e(Es,Cr),e(oi,Pr),e(Xl,Ir),e(Xl,qi),e(qi,xr),e(qi,ms),e(ms,Tr),n(i,sa,p),n(i,jt,p),e(jt,Nr),e(jt,_s),e(_s,Ar),e(jt,Sr),e(jt,bs),e(bs,jr),e(jt,Lr),e(jt,ws),e(ws,qr),e(jt,Mr),e(jt,ys),e(ys,Hr),e(jt,Ur),n(i,aa,p),n(i,Mi,p),e(Mi,Kr),n(i,ra,p),n(i,Hi,p),e(Hi,ks),e(ks,Rr),n(i,na,p),n(i,No,p),e(No,Gr),e(No,Ds),e(Ds,zr),e(No,Fr),n(i,fa,p),n(i,Ui,p),e(Ui,Yr),n(i,ca,p),n(i,ii,p),e(ii,Os),e(Os,Br),e(ii,$r),n(i,ua,p),n(i,Ki,p),e(Ki,Wr),n(i,da,p),n(i,hl,p),e(hl,El),e(El,Vr),e(El,Cs),e(Cs,Jr),e(El,Qr),e(El,Ps),e(Ps,Xr),e(El,Zr),e(El,Is),e(Is,gr),e(El,en),e(El,xs),e(xs,tn),e(hl,ln),e(hl,co),e(co,on),e(co,Ts),e(Ts,sn),e(co,an),e(co,Ns),e(Ns,rn),e(co,nn),e(hl,fn),e(hl,Ao),e(Ao,cn),e(Ao,As),e(As,un),e(Ao,dn),e(Ao,Ss),e(Ss,pn),e(hl,vn),e(hl,So),e(So,hn),e(So,js),e(js,En),e(So,mn),e(So,Ls),e(Ls,_n),n(i,pa,p),n(i,Ri,p),e(Ri,bn)},p:we,i:we,o:we,d(i){i&&t(E),i&&t(P),i&&t(b),i&&t(le),i&&t(I),i&&t(oe),i&&t(O),i&&t(ie),i&&t(C),i&&t(Ve),i&&t(W),i&&t(ae),i&&t(g),i&&t(Je),i&&t(Me),i&&t(vt),i&&t(He),i&&t(Ke),i&&t(Et),i&&t(Oe),i&&t(V),i&&t(it),i&&t(kt),i&&t(at),i&&t(X),i&&t(Ol),i&&t(Be),i&&t(Cl),i&&t(It),i&&t(Pl),i&&t($e),i&&t(rl),i&&t(B),i&&t(Ft),i&&t(x),i&&t(ve),i&&t(St),i&&t(fl),i&&t(_e),i&&t(Fl),i&&t(Se),i&&t(zo),i&&t(te),i&&t($o),i&&t(xl),i&&t(Vo),i&&t(be),i&&t(Jo),i&&t(io),i&&t(Qo),i&&t(Wl),i&&t(Xo),i&&t(Tl),i&&t(Zo),i&&t(Nl),i&&t(ao),i&&t(ro),i&&t(go),i&&t($t),i&&t(ei),i&&t(no),i&&t(Ys),i&&t(Ai),i&&t(Bs),i&&t(Io),i&&t($s),i&&t(dl),i&&t(Ws),i&&t(pl),i&&t(Vs),i&&t(Al),i&&t(Js),i&&t(Si),i&&t(Qs),i&&t(ji),i&&t(Xs),i&&t(fo),i&&t(Zs),i&&t(vl),i&&t(gs),i&&t(ti),i&&t(ea),i&&t(Ql),i&&t(ta),i&&t(li),i&&t(la),i&&t(xo),i&&t(oa),i&&t(Li),i&&t(ia),i&&t(Xl),i&&t(sa),i&&t(jt),i&&t(aa),i&&t(Mi),i&&t(ra),i&&t(Hi),i&&t(na),i&&t(No),i&&t(fa),i&&t(Ui),i&&t(ca),i&&t(ii),i&&t(ua),i&&t(Ki),i&&t(da),i&&t(hl),i&&t(pa),i&&t(Ri)}}}class qc extends Wi{constructor(E){super(),Vi(this,E,null,Lc,Ji,{})}}var Mc=Object.freeze(Object.defineProperty({__proto__:null,default:qc},Symbol.toStringTag,{value:"Module"}));function Hc(Wt){let E,A,P,b,T,k,w,U,S,j,le,I,D,oe,O,L,F,q,y,N,K,R,ie,C,G,$;return{c(){E=s("h1"),A=l("Nuvolaris CLI"),P=u(),b=s("p"),T=l("This repo discusses the Command Line Interface to Nuvolaris."),k=u(),w=s("p"),U=l("For users, check this short "),S=s("a"),j=l("introduction"),le=l("."),I=u(),D=s("p"),oe=l("For developers, check the "),O=s("a"),L=l("Design"),F=l(" document."),q=u(),y=s("p"),N=l("You can discuss it in the #"),K=s("a"),R=l("nuvolaris-cli"),ie=l(" discord channel and in the forum under the category "),C=s("a"),G=l("CLI"),$=l("."),this.h()},l(m){E=a(m,"H1",{});var M=r(E);A=o(M,"Nuvolaris CLI"),M.forEach(t),P=d(m),b=a(m,"P",{});var ye=r(b);T=o(ye,"This repo discusses the Command Line Interface to Nuvolaris."),ye.forEach(t),k=d(m),w=a(m,"P",{});var Z=r(w);U=o(Z,"For users, check this short "),S=a(Z,"A",{href:!0});var Ve=r(S);j=o(Ve,"introduction"),Ve.forEach(t),le=o(Z,"."),Z.forEach(t),I=d(m),D=a(m,"P",{});var W=r(D);oe=o(W,"For developers, check the "),O=a(W,"A",{href:!0});var se=r(O);L=o(se,"Design"),se.forEach(t),F=o(W," document."),W.forEach(t),q=d(m),y=a(m,"P",{});var H=r(y);N=o(H,"You can discuss it in the #"),K=a(H,"A",{href:!0,rel:!0});var he=r(K);R=o(he,"nuvolaris-cli"),he.forEach(t),ie=o(H," discord channel and in the forum under the category "),C=a(H,"A",{href:!0,rel:!0});var je=r(C);G=o(je,"CLI"),je.forEach(t),$=o(H,"."),H.forEach(t),this.h()},h(){_(S,"href","nuv.txt"),_(O,"href","DESIGN.md"),_(K,"href","https://discord.gg/JWqFJJfvED"),_(K,"rel","nofollow"),_(C,"href","https://github.com/nuvolaris/nuvolaris/discussions/categories/cli"),_(C,"rel","nofollow")},m(m,M){n(m,E,M),e(E,A),n(m,P,M),n(m,b,M),e(b,T),n(m,k,M),n(m,w,M),e(w,U),e(w,S),e(S,j),e(w,le),n(m,I,M),n(m,D,M),e(D,oe),e(D,O),e(O,L),e(D,F),n(m,q,M),n(m,y,M),e(y,N),e(y,K),e(K,R),e(y,ie),e(y,C),e(C,G),e(y,$)},p:we,i:we,o:we,d(m){m&&t(E),m&&t(P),m&&t(b),m&&t(k),m&&t(w),m&&t(I),m&&t(D),m&&t(q),m&&t(y)}}}class Uc extends Wi{constructor(E){super(),Vi(this,E,null,Hc,Ji,{})}}var Kc=Object.freeze(Object.defineProperty({__proto__:null,default:Uc},Symbol.toStringTag,{value:"Module"}));function Rc(Wt){let E,A,P,b,T,k,w,U,S,j,le,I,D,oe,O,L,F,q,y,N,K,R,ie,C,G,$,m,M,ye,Z,Ve,W,se,H,he,je,qt,Vt,ae,g,Mt,Le,re,qe,ke,Ht,Jt,Je,Me,Qe,ee,De,ml,vt,He,ht,Ue,ne,_l,Ke,Et,mt,Oe,V,_t,Xe,Qt,Ze,bt,ge,Ce,Re,Xt,Y,wt,et,Zt,tt,bl=`<code class="language-undefined">sudo snap install microk8s --classic
sudo microk8s enable storage ingress dns
sudo usermod -a -G microk8s ubuntu
sudo snap install kubectl --classic</code>`,J,Ge,Ut,gt,ze,el,lt,Pe,Sl=`<code class="language-undefined">mkdir ~/.kube
microk8s config &gt;~/.kube/config
kubectl get nodes</code>`,ot,Q,tl,de,Kt,yt,it,kt,st,at,X,Ee,Dt,Ot,ll,Ie,rt,ol,Fe,nt,ft,me,to=`<code class="language-undefined">DNS=&#39;&lt;your-dns-name&gt;&#39;
sudo microk8s stop
sed -i &quot;/DNS.5/a DNS.6 = $DNS&quot; /var/snap/microk8s/current/certs/csr.conf.template
sudo microk8s start
microk8s config | sed -e &quot;s/server: .*/server: https://$DNS:16443/&quot; &gt;kubeconfig</code>`,ct,xe,wl,fe,z,yl,Te,Ye,ut,kl,Ct,Ne,Dl,il,ce,Rt,Gt;return{c(){E=s("h1"),A=l("Prerequisites"),P=u(),b=s("p"),T=l("In this document collect instructions how to prepare a suitable development environment for installing Nuvolaris"),k=u(),w=s("h2"),U=l("Desktop"),S=u(),j=s("p"),le=l("If you have a windows or mac desktop, download and install "),I=s("a"),D=l("Docker Desktop"),oe=l("."),O=u(),L=s("p"),F=l("Then you can "),q=s("a"),y=l("install"),N=l(" Nuvolaris with "),K=s("code"),R=l("nuv setup --devcluster"),ie=u(),C=s("h2"),G=l("Single Server with Ubuntu and MicroK8S"),$=u(),m=s("p"),M=l("You can install Nuvolaris on a single Linux server using Ubuntu and MicroK8s. If you have a single linux server, you need at least 4GB of ram and 2 VCPU."),ye=u(),Z=s("p"),Ve=l("You can provision a single server in multiple environments. It is possible to create a VM with Ubuntu with a fixed IP basically in every cloud provider. Check the documentation of your cloud provider."),W=u(),se=s("p"),H=l("Note that if you have only the IP, and you do not have a DNS name, you can use the "),he=s("a"),je=l("nip.io"),qt=l(" service as a DNS name, even in internal networks."),Vt=u(),ae=s("p"),g=l("For example if your IP is "),Mt=s("code"),Le=l("1.2.3.4"),re=l(", your DNS name is "),qe=s("code"),ke=l("1-2-3-4.nip.io"),Ht=l("."),Jt=u(),Je=s("p"),Me=l("Some hints to create a suitable VM."),Qe=u(),ee=s("ul"),De=s("li"),ml=l("On AWS, launch an Ubuntu 20 instance, a "),vt=s("code"),He=l("t3.medium"),ht=l(" with 30GB if disk space. It is also recommended you allocate a static IP and associate it with a fixed DNS name. You also need to open the ports 16443, 443 and 80."),Ue=u(),ne=s("li"),_l=l("You can also use "),Ke=s("a"),Et=l("multipass"),mt=l(" to create a vm with "),Oe=s("code"),V=l("multipass launch -c2 -d30G -m4G -n nuvolaris"),_t=l(" and use the IP assigned that you can see with "),Xe=s("code"),Qt=l("multipass list"),Ze=u(),bt=s("h3"),ge=l("Installing Nuvolaris with MicroK8s"),Ce=u(),Re=s("p"),Xt=l("If you have a single server, install "),Y=s("a"),wt=l("MicroK8S"),et=l(" and enable ingress and storage:"),Zt=u(),tt=s("pre"),J=u(),Ge=s("p"),Ut=l("Then you have to logout and login again to pick changes in the group."),gt=u(),ze=s("p"),el=l("You can then generate a kubectl configuration and check it works with:"),lt=u(),Pe=s("pre"),ot=u(),Q=s("p"),tl=l("Then you can then "),de=s("a"),Kt=l("donwload "),yt=s("code"),it=l("nuv"),kt=l(" and "),st=s("a"),at=l("install"),X=l(" Nuvolaris from the server itself with "),Ee=s("code"),Dt=l("nuv setup --context=<context>"),Ot=l("."),ll=u(),Ie=s("h3"),rt=l("Install Nuvolaris remotely"),ol=u(),Fe=s("p"),nt=l("If you want to access to the server remotely, you need to add the DNS name of the server (either the real one or the .nip.io) and  generate a proper configuration with:"),ft=u(),me=s("pre"),ct=u(),xe=s("p"),wl=l("You can then download the kubeconfig file and copy in your ~/.kube/config to access the remote Kubernetes cluster."),fe=u(),z=s("p"),yl=l("Then you can then "),Te=s("a"),Ye=l("donwload "),ut=s("code"),kl=l("nuv"),Ct=l(" and "),Ne=s("a"),Dl=l("install"),il=l(" Nuvolaris from the server itself with "),ce=s("code"),Rt=l("nuv setup --context=<context>"),Gt=l("."),this.h()},l(c){E=a(c,"H1",{});var h=r(E);A=o(h,"Prerequisites"),h.forEach(t),P=d(c),b=a(c,"P",{});var Ol=r(b);T=o(Ol,"In this document collect instructions how to prepare a suitable development environment for installing Nuvolaris"),Ol.forEach(t),k=d(c),w=a(c,"H2",{});var Be=r(w);U=o(Be,"Desktop"),Be.forEach(t),S=d(c),j=a(c,"P",{});var sl=r(j);le=o(sl,"If you have a windows or mac desktop, download and install "),I=a(sl,"A",{href:!0,rel:!0});var Pt=r(I);D=o(Pt,"Docker Desktop"),Pt.forEach(t),oe=o(sl,"."),sl.forEach(t),O=d(c),L=a(c,"P",{});var dt=r(L);F=o(dt,"Then you can "),q=a(dt,"A",{href:!0});var Cl=r(q);y=o(Cl,"install"),Cl.forEach(t),N=o(dt," Nuvolaris with "),K=a(dt,"CODE",{});var It=r(K);R=o(It,"nuv setup --devcluster"),It.forEach(t),dt.forEach(t),ie=d(c),C=a(c,"H2",{});var zt=r(C);G=o(zt,"Single Server with Ubuntu and MicroK8S"),zt.forEach(t),$=d(c),m=a(c,"P",{});var Pl=r(m);M=o(Pl,"You can install Nuvolaris on a single Linux server using Ubuntu and MicroK8s. If you have a single linux server, you need at least 4GB of ram and 2 VCPU."),Pl.forEach(t),ye=d(c),Z=a(c,"P",{});var $e=r(Z);Ve=o($e,"You can provision a single server in multiple environments. It is possible to create a VM with Ubuntu with a fixed IP basically in every cloud provider. Check the documentation of your cloud provider."),$e.forEach(t),W=d(c),se=a(c,"P",{});var pe=r(se);H=o(pe,"Note that if you have only the IP, and you do not have a DNS name, you can use the "),he=a(pe,"A",{href:!0,rel:!0});var jl=r(he);je=o(jl,"nip.io"),jl.forEach(t),qt=o(pe," service as a DNS name, even in internal networks."),pe.forEach(t),Vt=d(c),ae=a(c,"P",{});var We=r(ae);g=o(We,"For example if your IP is "),Mt=a(We,"CODE",{});var al=r(Mt);Le=o(al,"1.2.3.4"),al.forEach(t),re=o(We,", your DNS name is "),qe=a(We,"CODE",{});var Ll=r(qe);ke=o(Ll,"1-2-3-4.nip.io"),Ll.forEach(t),Ht=o(We,"."),We.forEach(t),Jt=d(c),Je=a(c,"P",{});var rl=r(Je);Me=o(rl,"Some hints to create a suitable VM."),rl.forEach(t),Qe=d(c),ee=a(c,"UL",{});var B=r(ee);De=a(B,"LI",{});var nl=r(De);ml=o(nl,"On AWS, launch an Ubuntu 20 instance, a "),vt=a(nl,"CODE",{});var Ft=r(vt);He=o(Ft,"t3.medium"),Ft.forEach(t),ht=o(nl," with 30GB if disk space. It is also recommended you allocate a static IP and associate it with a fixed DNS name. You also need to open the ports 16443, 443 and 80."),nl.forEach(t),Ue=d(B),ne=a(B,"LI",{});var x=r(ne);_l=o(x,"You can also use "),Ke=a(x,"A",{href:!0,rel:!0});var ql=r(Ke);Et=o(ql,"multipass"),ql.forEach(t),mt=o(x," to create a vm with "),Oe=a(x,"CODE",{});var xt=r(Oe);V=o(xt,"multipass launch -c2 -d30G -m4G -n nuvolaris"),xt.forEach(t),_t=o(x," and use the IP assigned that you can see with "),Xe=a(x,"CODE",{});var Ml=r(Xe);Qt=o(Ml,"multipass list"),Ml.forEach(t),x.forEach(t),B.forEach(t),Ze=d(c),bt=a(c,"H3",{});var Hl=r(bt);ge=o(Hl,"Installing Nuvolaris with MicroK8s"),Hl.forEach(t),Ce=d(c),Re=a(c,"P",{});var Ae=r(Re);Xt=o(Ae,"If you have a single server, install "),Y=a(Ae,"A",{href:!0,rel:!0});var Ul=r(Y);wt=o(Ul,"MicroK8S"),Ul.forEach(t),et=o(Ae," and enable ingress and storage:"),Ae.forEach(t),Zt=d(c),tt=a(c,"PRE",{class:!0});var lo=r(tt);lo.forEach(t),J=d(c),Ge=a(c,"P",{});var Yt=r(Ge);Ut=o(Yt,"Then you have to logout and login again to pick changes in the group."),Yt.forEach(t),gt=d(c),ze=a(c,"P",{});var pt=r(ze);el=o(pt,"You can then generate a kubectl configuration and check it works with:"),pt.forEach(t),lt=d(c),Pe=a(c,"PRE",{class:!0});var oo=r(Pe);oo.forEach(t),ot=d(c),Q=a(c,"P",{});var ue=r(Q);tl=o(ue,"Then you can then "),de=a(ue,"A",{href:!0,rel:!0});var Il=r(de);Kt=o(Il,"donwload "),yt=a(Il,"CODE",{});var Kl=r(yt);it=o(Kl,"nuv"),Kl.forEach(t),Il.forEach(t),kt=o(ue," and "),st=a(ue,"A",{href:!0});var Tt=r(st);at=o(Tt,"install"),Tt.forEach(t),X=o(ue," Nuvolaris from the server itself with "),Ee=a(ue,"CODE",{});var Bt=r(Ee);Dt=o(Bt,"nuv setup --context=<context>"),Bt.forEach(t),Ot=o(ue,"."),ue.forEach(t),ll=d(c),Ie=a(c,"H3",{});var Rl=r(Ie);rt=o(Rl,"Install Nuvolaris remotely"),Rl.forEach(t),ol=d(c),Fe=a(c,"P",{});var Nt=r(Fe);nt=o(Nt,"If you want to access to the server remotely, you need to add the DNS name of the server (either the real one or the .nip.io) and  generate a proper configuration with:"),Nt.forEach(t),ft=d(c),me=a(c,"PRE",{class:!0});var At=r(me);At.forEach(t),ct=d(c),xe=a(c,"P",{});var Gl=r(xe);wl=o(Gl,"You can then download the kubeconfig file and copy in your ~/.kube/config to access the remote Kubernetes cluster."),Gl.forEach(t),fe=d(c),z=a(c,"P",{});var ve=r(z);yl=o(ve,"Then you can then "),Te=a(ve,"A",{href:!0,rel:!0});var St=r(Te);Ye=o(St,"donwload "),ut=a(St,"CODE",{});var zl=r(ut);kl=o(zl,"nuv"),zl.forEach(t),St.forEach(t),Ct=o(ve," and "),Ne=a(ve,"A",{href:!0});var fl=r(Ne);Dl=o(fl,"install"),fl.forEach(t),il=o(ve," Nuvolaris from the server itself with "),ce=a(ve,"CODE",{});var _e=r(ce);Rt=o(_e,"nuv setup --context=<context>"),_e.forEach(t),Gt=o(ve,"."),ve.forEach(t),this.h()},h(){_(I,"href","https://www.docker.com/products/docker-desktop/"),_(I,"rel","nofollow"),_(q,"href","SETUP.md#docker-installation"),_(he,"href","https://nip.io/"),_(he,"rel","nofollow"),_(Ke,"href","https://multipass.run/"),_(Ke,"rel","nofollow"),_(Y,"href","https://microk8s.io/"),_(Y,"rel","nofollow"),_(tt,"class","language-undefined"),_(Pe,"class","language-undefined"),_(de,"href","https://github.com/nuvolaris/nuvolaris/releases"),_(de,"rel","nofollow"),_(st,"href","SETUP.md#kubernetes-installation"),_(me,"class","language-undefined"),_(Te,"href","https://github.com/nuvolaris/nuvolaris/releases"),_(Te,"rel","nofollow"),_(Ne,"href","SETUP.md#kubernetes-installation")},m(c,h){n(c,E,h),e(E,A),n(c,P,h),n(c,b,h),e(b,T),n(c,k,h),n(c,w,h),e(w,U),n(c,S,h),n(c,j,h),e(j,le),e(j,I),e(I,D),e(j,oe),n(c,O,h),n(c,L,h),e(L,F),e(L,q),e(q,y),e(L,N),e(L,K),e(K,R),n(c,ie,h),n(c,C,h),e(C,G),n(c,$,h),n(c,m,h),e(m,M),n(c,ye,h),n(c,Z,h),e(Z,Ve),n(c,W,h),n(c,se,h),e(se,H),e(se,he),e(he,je),e(se,qt),n(c,Vt,h),n(c,ae,h),e(ae,g),e(ae,Mt),e(Mt,Le),e(ae,re),e(ae,qe),e(qe,ke),e(ae,Ht),n(c,Jt,h),n(c,Je,h),e(Je,Me),n(c,Qe,h),n(c,ee,h),e(ee,De),e(De,ml),e(De,vt),e(vt,He),e(De,ht),e(ee,Ue),e(ee,ne),e(ne,_l),e(ne,Ke),e(Ke,Et),e(ne,mt),e(ne,Oe),e(Oe,V),e(ne,_t),e(ne,Xe),e(Xe,Qt),n(c,Ze,h),n(c,bt,h),e(bt,ge),n(c,Ce,h),n(c,Re,h),e(Re,Xt),e(Re,Y),e(Y,wt),e(Re,et),n(c,Zt,h),n(c,tt,h),tt.innerHTML=bl,n(c,J,h),n(c,Ge,h),e(Ge,Ut),n(c,gt,h),n(c,ze,h),e(ze,el),n(c,lt,h),n(c,Pe,h),Pe.innerHTML=Sl,n(c,ot,h),n(c,Q,h),e(Q,tl),e(Q,de),e(de,Kt),e(de,yt),e(yt,it),e(Q,kt),e(Q,st),e(st,at),e(Q,X),e(Q,Ee),e(Ee,Dt),e(Q,Ot),n(c,ll,h),n(c,Ie,h),e(Ie,rt),n(c,ol,h),n(c,Fe,h),e(Fe,nt),n(c,ft,h),n(c,me,h),me.innerHTML=to,n(c,ct,h),n(c,xe,h),e(xe,wl),n(c,fe,h),n(c,z,h),e(z,yl),e(z,Te),e(Te,Ye),e(Te,ut),e(ut,kl),e(z,Ct),e(z,Ne),e(Ne,Dl),e(z,il),e(z,ce),e(ce,Rt),e(z,Gt)},p:we,i:we,o:we,d(c){c&&t(E),c&&t(P),c&&t(b),c&&t(k),c&&t(w),c&&t(S),c&&t(j),c&&t(O),c&&t(L),c&&t(ie),c&&t(C),c&&t($),c&&t(m),c&&t(ye),c&&t(Z),c&&t(W),c&&t(se),c&&t(Vt),c&&t(ae),c&&t(Jt),c&&t(Je),c&&t(Qe),c&&t(ee),c&&t(Ze),c&&t(bt),c&&t(Ce),c&&t(Re),c&&t(Zt),c&&t(tt),c&&t(J),c&&t(Ge),c&&t(gt),c&&t(ze),c&&t(lt),c&&t(Pe),c&&t(ot),c&&t(Q),c&&t(ll),c&&t(Ie),c&&t(ol),c&&t(Fe),c&&t(ft),c&&t(me),c&&t(ct),c&&t(xe),c&&t(fe),c&&t(z)}}}class Gc extends Wi{constructor(E){super(),Vi(this,E,null,Rc,Ji,{})}}var zc=Object.freeze(Object.defineProperty({__proto__:null,default:Gc},Symbol.toStringTag,{value:"Module"}));function Fc(Wt){let E,A,P,b,T,k,w,U,S,j,le,I,D,oe,O,L,F,q;return{c(){E=s("h1"),A=l("nuvolaris-documentation"),P=u(),b=s("p"),T=l("Nuvolaris Documentation"),k=u(),w=s("ul"),U=s("li"),S=s("a"),j=l("Preparation"),le=u(),I=s("li"),D=s("a"),oe=l("Installation"),O=u(),L=s("li"),F=s("a"),q=l("Write your first action"),this.h()},l(y){E=a(y,"H1",{});var N=r(E);A=o(N,"nuvolaris-documentation"),N.forEach(t),P=d(y),b=a(y,"P",{});var K=r(b);T=o(K,"Nuvolaris Documentation"),K.forEach(t),k=d(y),w=a(y,"UL",{});var R=r(w);U=a(R,"LI",{});var ie=r(U);S=a(ie,"A",{href:!0});var C=r(S);j=o(C,"Preparation"),C.forEach(t),ie.forEach(t),le=d(R),I=a(R,"LI",{});var G=r(I);D=a(G,"A",{href:!0});var $=r(D);oe=o($,"Installation"),$.forEach(t),G.forEach(t),O=d(R),L=a(R,"LI",{});var m=r(L);F=a(m,"A",{href:!0});var M=r(F);q=o(M,"Write your first action"),M.forEach(t),m.forEach(t),R.forEach(t),this.h()},h(){_(S,"href","PREREQ.md"),_(D,"href","SETUP.md"),_(F,"href","TUTORIAL.md")},m(y,N){n(y,E,N),e(E,A),n(y,P,N),n(y,b,N),e(b,T),n(y,k,N),n(y,w,N),e(w,U),e(U,S),e(S,j),e(w,le),e(w,I),e(I,D),e(D,oe),e(w,O),e(w,L),e(L,F),e(F,q)},p:we,i:we,o:we,d(y){y&&t(E),y&&t(P),y&&t(b),y&&t(k),y&&t(w)}}}class Yc extends Wi{constructor(E){super(),Vi(this,E,null,Fc,Ji,{})}}var Bc=Object.freeze(Object.defineProperty({__proto__:null,default:Yc},Symbol.toStringTag,{value:"Module"}));function $c(Wt){let E,A,P,b,T,k,w,U,S,j,le,I,D,oe,O,L,F,q,y,N,K,R,ie,C,G,$,m,M,ye,Z,Ve,W,se,H,he,je,qt,Vt,ae,g,Mt,Le,re,qe,ke,Ht,Jt,Je,Me,Qe,ee,De,ml,vt,He,ht,Ue,ne,_l,Ke,Et,mt,Oe,V,_t,Xe,Qt,Ze,bt,ge,Ce,Re,Xt,Y,wt,et,Zt,tt,bl,J,Ge,Ut,gt,ze,el,lt,Pe,Sl,ot,Q,tl,de,Kt,yt,it,kt,st,at,X,Ee,Dt,Ot,ll,Ie,rt,ol,Fe,nt,ft,me,to,ct,xe,wl,fe,z,yl,Te,Ye,ut,kl,Ct,Ne,Dl,il,ce,Rt,Gt,c,h,Ol,Be,sl,Pt,dt,Cl,It,zt,Pl,$e,pe,jl,We,al,Ll,rl,B,nl,Ft,x,ql,xt,Ml,Hl,Ae,Ul,lo,Yt,pt,oo,ue,Il,Kl,Tt,Bt,Rl,Nt,At,Gl,ve,St,zl,fl,_e,Ko,Fl,Se,Ro,Yl,Bl,Go;return{c(){E=s("h1"),A=l("Installing Nuvolaris"),P=u(),b=s("h2"),T=l("Prerequisites"),k=u(),w=s("p"),U=l("To install Nuvolars you need either Docker running locally, with at least 4GB of memory available, or a Kubernetes Cluster with at least one worker node with 4GB of memory."),S=u(),j=s("h2"),le=l("Download"),I=u(),D=s("p"),oe=l("Download the latest release of the "),O=s("code"),L=l("nuv"),F=l(" CLI from "),q=s("a"),y=l("here"),N=l(", and unpack it in a folder in your path."),K=u(),R=s("h2"),ie=l("Overview of the setup"),C=u(),G=s("p"),$=l("the "),m=s("code"),M=l("nuv"),ye=l(" cli is very rich and has a lot of subcommands. The sub command to install is "),Z=s("code"),Ve=l("nuv setup"),W=l("."),se=u(),H=s("p"),he=l("If you type "),je=s("code"),qt=l("nuv setup"),Vt=l(" alone it will show a list of options and a list of available Kubernetes contexts, if any."),ae=u(),g=s("p"),Mt=l("The main installation options are:"),Le=u(),re=s("ul"),qe=s("li"),ke=s("a"),Ht=s("code"),Jt=l("--configure"),Je=l(" to configure the installation"),Me=u(),Qe=s("li"),ee=s("a"),De=s("code"),ml=l("--devcluster"),vt=l(" to install  Nuvolaris in a local development cluster in Docker"),He=u(),ht=s("li"),Ue=s("a"),ne=s("code"),_l=l("--context=<context>"),Ke=l(" to install on a production Kubernetes cluster already available"),Et=u(),mt=s("li"),Oe=s("a"),V=s("code"),_t=l("--uninstall=<context>"),Xe=l(" to uninstall Nuvolaris from a development context"),Qt=u(),Ze=s("h1"),bt=l("Configuration"),ge=u(),Ce=s("p"),Re=l("The configuration step is optional. You can omit it, and if you do not configure the system will generate suitable defaults."),Xt=u(),Y=s("p"),wt=l("If you type "),et=s("code"),Zt=l("nuv setup --configure"),tt=l(" the system will generate a "),bl=s("code"),J=l("~/.nuvolaris/config.yaml"),Ge=l(" configuration file and will tell you: "),Ut=s("code"),gt=l("please edit the confuguration file you need to change parameters"),ze=l("."),el=u(),lt=s("p"),Pe=l("Please check the file and read comments for the meanining of the various parameters."),Sl=u(),ot=s("p"),Q=l("Most important remeber to configure the  size of the volumes."),tl=u(),de=s("h1"),Kt=l("Docker Installation"),yt=u(),it=s("p"),kt=l("If you run:"),st=u(),at=s("p"),X=s("code"),Ee=l("nuv setup --devcluster"),Dt=u(),Ot=s("p"),ll=l("it will create a development cluster using Kind (Kubernetes-IN-Docker) and then will install Nuvolaris in it."),Ie=u(),rt=s("p"),ol=l("It will use the parameters you configured with "),Fe=s("code"),nt=l("--configure"),ft=u(),me=s("p"),to=l("Note the installation in Docker is for development only and is not perfistent: if you restart Docker or the container all the data in it are lost."),ct=u(),xe=s("h3"),wl=l("Managing the devcluster"),fe=u(),z=s("p"),yl=l("Note that you can actually create the devcluster by yourself:"),Te=u(),Ye=s("p"),ut=s("code"),kl=l("nuv devcluster create"),Ct=u(),Ne=s("p"),Dl=l("and destroy it with:"),il=u(),ce=s("p"),Rt=s("code"),Gt=l("nuv devcluster destroy"),c=u(),h=s("p"),Ol=l("If you create the cluster by yourself it will be accessible with a context "),Be=s("code"),sl=l("kind-nuvolaris"),Pt=l(" so can install nuvolaris with "),dt=s("code"),Cl=l("nuv setup --context=kind-nuvolaris"),It=u(),zt=s("h1"),Pl=l("Kubernetes Installation"),$e=u(),pe=s("p"),jl=l("Nuvolaris can be installed in any Kubernetes cluster accessible with "),We=s("code"),al=l("kubectl"),Ll=l("."),rl=u(),B=s("p"),nl=l("Every Kubernetes installation provides a different way to create a cluster and access it with "),Ft=s("code"),x=l("kubectl"),ql=l(", and will setup a context to access it. Please type "),xt=s("code"),Ml=l("nuv setup"),Hl=l(" to list the available contexts and then install it with "),Ae=s("code"),Ul=l("nuv setup --context=<context-name>"),lo=l("."),Yt=u(),pt=s("p"),oo=l("The installation will use the values provided by "),ue=s("code"),Il=l("nuv setup --configure"),Kl=l(". It will also create a volume to persist data."),Tt=u(),Bt=s("h1"),Rl=l("Uninstall"),Nt=u(),At=s("p"),Gl=l("If you want to delete the installation remove it with "),ve=s("code"),St=l("nuv setup --uninstall=<context>"),zl=l("."),fl=u(),_e=s("p"),Ko=l("You can list the available context with "),Fl=s("code"),Se=l("nuv setup"),Ro=l(". Note that the uninstall will not remove the data volumes, you will have to remove them manually."),Yl=u(),Bl=s("p"),Go=l("Furthermore a new installation without removing the volumes will reuse them, so if you want to reset entirely your installatio, will have to remove manually the volumes."),this.h()},l(f){E=a(f,"H1",{});var v=r(E);A=o(v,"Installing Nuvolaris"),v.forEach(t),P=d(f),b=a(f,"H2",{});var ri=r(b);T=o(ri,"Prerequisites"),ri.forEach(t),k=d(f),w=a(f,"P",{});var vo=r(w);U=o(vo,"To install Nuvolars you need either Docker running locally, with at least 4GB of memory available, or a Kubernetes Cluster with at least one worker node with 4GB of memory."),vo.forEach(t),S=d(f),j=a(f,"H2",{});var ni=r(j);le=o(ni,"Download"),ni.forEach(t),I=d(f),D=a(f,"P",{});var $l=r(D);oe=o($l,"Download the latest release of the "),O=a($l,"CODE",{});var ho=r(O);L=o(ho,"nuv"),ho.forEach(t),F=o($l," CLI from "),q=a($l,"A",{href:!0,rel:!0});var fi=r(q);y=o(fi,"here"),fi.forEach(t),N=o($l,", and unpack it in a folder in your path."),$l.forEach(t),K=d(f),R=a(f,"H2",{});var zo=r(R);ie=o(zo,"Overview of the setup"),zo.forEach(t),C=d(f),G=a(f,"P",{});var te=r(G);$=o(te,"the "),m=a(te,"CODE",{});var ci=r(m);M=o(ci,"nuv"),ci.forEach(t),ye=o(te," cli is very rich and has a lot of subcommands. The sub command to install is "),Z=a(te,"CODE",{});var Eo=r(Z);Ve=o(Eo,"nuv setup"),Eo.forEach(t),W=o(te,"."),te.forEach(t),se=d(f),H=a(f,"P",{});var mo=r(H);he=o(mo,"If you type "),je=a(mo,"CODE",{});var ui=r(je);qt=o(ui,"nuv setup"),ui.forEach(t),Vt=o(mo," alone it will show a list of options and a list of available Kubernetes contexts, if any."),mo.forEach(t),ae=d(f),g=a(f,"P",{});var _o=r(g);Mt=o(_o,"The main installation options are:"),_o.forEach(t),Le=d(f),re=a(f,"UL",{});var cl=r(re);qe=a(cl,"LI",{});var Fo=r(qe);ke=a(Fo,"A",{href:!0});var bo=r(ke);Ht=a(bo,"CODE",{});var di=r(Ht);Jt=o(di,"--configure"),di.forEach(t),bo.forEach(t),Je=o(Fo," to configure the installation"),Fo.forEach(t),Me=d(cl),Qe=a(cl,"LI",{});var Yo=r(Qe);ee=a(Yo,"A",{href:!0});var wo=r(ee);De=a(wo,"CODE",{});var pi=r(De);ml=o(pi,"--devcluster"),pi.forEach(t),wo.forEach(t),vt=o(Yo," to install  Nuvolaris in a local development cluster in Docker"),Yo.forEach(t),He=d(cl),ht=a(cl,"LI",{});var Bo=r(ht);Ue=a(Bo,"A",{href:!0});var $o=r(Ue);ne=a($o,"CODE",{});var xl=r(ne);_l=o(xl,"--context=<context>"),xl.forEach(t),$o.forEach(t),Ke=o(Bo," to install on a production Kubernetes cluster already available"),Bo.forEach(t),Et=d(cl),mt=a(cl,"LI",{});var Wo=r(mt);Oe=a(Wo,"A",{href:!0});var yo=r(Oe);V=a(yo,"CODE",{});var vi=r(V);_t=o(vi,"--uninstall=<context>"),vi.forEach(t),yo.forEach(t),Xe=o(Wo," to uninstall Nuvolaris from a development context"),Wo.forEach(t),cl.forEach(t),Qt=d(f),Ze=a(f,"H1",{});var hi=r(Ze);bt=o(hi,"Configuration"),hi.forEach(t),ge=d(f),Ce=a(f,"P",{});var Vo=r(Ce);Re=o(Vo,"The configuration step is optional. You can omit it, and if you do not configure the system will generate suitable defaults."),Vo.forEach(t),Xt=d(f),Y=a(f,"P",{});var be=r(Y);wt=o(be,"If you type "),et=a(be,"CODE",{});var Ei=r(et);Zt=o(Ei,"nuv setup --configure"),Ei.forEach(t),tt=o(be," the system will generate a "),bl=a(be,"CODE",{});var ko=r(bl);J=o(ko,"~/.nuvolaris/config.yaml"),ko.forEach(t),Ge=o(be," configuration file and will tell you: "),Ut=a(be,"CODE",{});var mi=r(Ut);gt=o(mi,"please edit the confuguration file you need to change parameters"),mi.forEach(t),ze=o(be,"."),be.forEach(t),el=d(f),lt=a(f,"P",{});var _i=r(lt);Pe=o(_i,"Please check the file and read comments for the meanining of the various parameters."),_i.forEach(t),Sl=d(f),ot=a(f,"P",{});var Do=r(ot);Q=o(Do,"Most important remeber to configure the  size of the volumes."),Do.forEach(t),tl=d(f),de=a(f,"H1",{});var bi=r(de);Kt=o(bi,"Docker Installation"),bi.forEach(t),yt=d(f),it=a(f,"P",{});var Jo=r(it);kt=o(Jo,"If you run:"),Jo.forEach(t),st=d(f),at=a(f,"P",{});var io=r(at);X=a(io,"CODE",{});var wi=r(X);Ee=o(wi,"nuv setup --devcluster"),wi.forEach(t),io.forEach(t),Dt=d(f),Ot=a(f,"P",{});var Qo=r(Ot);ll=o(Qo,"it will create a development cluster using Kind (Kubernetes-IN-Docker) and then will install Nuvolaris in it."),Qo.forEach(t),Ie=d(f),rt=a(f,"P",{});var Wl=r(rt);ol=o(Wl,"It will use the parameters you configured with "),Fe=a(Wl,"CODE",{});var yi=r(Fe);nt=o(yi,"--configure"),yi.forEach(t),Wl.forEach(t),ft=d(f),me=a(f,"P",{});var Xo=r(me);to=o(Xo,"Note the installation in Docker is for development only and is not perfistent: if you restart Docker or the container all the data in it are lost."),Xo.forEach(t),ct=d(f),xe=a(f,"H3",{});var Tl=r(xe);wl=o(Tl,"Managing the devcluster"),Tl.forEach(t),fe=d(f),z=a(f,"P",{});var ki=r(z);yl=o(ki,"Note that you can actually create the devcluster by yourself:"),ki.forEach(t),Te=d(f),Ye=a(f,"P",{});var Oo=r(Ye);ut=a(Oo,"CODE",{});var Di=r(ut);kl=o(Di,"nuv devcluster create"),Di.forEach(t),Oo.forEach(t),Ct=d(f),Ne=a(f,"P",{});var Oi=r(Ne);Dl=o(Oi,"and destroy it with:"),Oi.forEach(t),il=d(f),ce=a(f,"P",{});var Zo=r(ce);Rt=a(Zo,"CODE",{});var Nl=r(Rt);Gt=o(Nl,"nuv devcluster destroy"),Nl.forEach(t),Zo.forEach(t),c=d(f),h=a(f,"P",{});var so=r(h);Ol=o(so,"If you create the cluster by yourself it will be accessible with a context "),Be=a(so,"CODE",{});var Co=r(Be);sl=o(Co,"kind-nuvolaris"),Co.forEach(t),Pt=o(so," so can install nuvolaris with "),dt=a(so,"CODE",{});var Ci=r(dt);Cl=o(Ci,"nuv setup --context=kind-nuvolaris"),Ci.forEach(t),so.forEach(t),It=d(f),zt=a(f,"H1",{});var Pi=r(zt);Pl=o(Pi,"Kubernetes Installation"),Pi.forEach(t),$e=d(f),pe=a(f,"P",{});var ao=r(pe);jl=o(ao,"Nuvolaris can be installed in any Kubernetes cluster accessible with "),We=a(ao,"CODE",{});var ro=r(We);al=o(ro,"kubectl"),ro.forEach(t),Ll=o(ao,"."),ao.forEach(t),rl=d(f),B=a(f,"P",{});var ul=r(B);nl=o(ul,"Every Kubernetes installation provides a different way to create a cluster and access it with "),Ft=a(ul,"CODE",{});var go=r(Ft);x=o(go,"kubectl"),go.forEach(t),ql=o(ul,", and will setup a context to access it. Please type "),xt=a(ul,"CODE",{});var $t=r(xt);Ml=o($t,"nuv setup"),$t.forEach(t),Hl=o(ul," to list the available contexts and then install it with "),Ae=a(ul,"CODE",{});var Ii=r(Ae);Ul=o(Ii,"nuv setup --context=<context-name>"),Ii.forEach(t),lo=o(ul,"."),ul.forEach(t),Yt=d(f),pt=a(f,"P",{});var Vl=r(pt);oo=o(Vl,"The installation will use the values provided by "),ue=a(Vl,"CODE",{});var xi=r(ue);Il=o(xi,"nuv setup --configure"),xi.forEach(t),Kl=o(Vl,". It will also create a volume to persist data."),Vl.forEach(t),Tt=d(f),Bt=a(f,"H1",{});var Ti=r(Bt);Rl=o(Ti,"Uninstall"),Ti.forEach(t),Nt=d(f),At=a(f,"P",{});var Jl=r(At);Gl=o(Jl,"If you want to delete the installation remove it with "),ve=a(Jl,"CODE",{});var Ni=r(ve);St=o(Ni,"nuv setup --uninstall=<context>"),Ni.forEach(t),zl=o(Jl,"."),Jl.forEach(t),fl=d(f),_e=a(f,"P",{});var Po=r(_e);Ko=o(Po,"You can list the available context with "),Fl=a(Po,"CODE",{});var ei=r(Fl);Se=o(ei,"nuv setup"),ei.forEach(t),Ro=o(Po,". Note that the uninstall will not remove the data volumes, you will have to remove them manually."),Po.forEach(t),Yl=d(f),Bl=a(f,"P",{});var no=r(Bl);Go=o(no,"Furthermore a new installation without removing the volumes will reuse them, so if you want to reset entirely your installatio, will have to remove manually the volumes."),no.forEach(t),this.h()},h(){_(q,"href","https://github.com/nuvolaris/nuvolaris/releases"),_(q,"rel","nofollow"),_(ke,"href","#configuration"),_(ee,"href","#docker-installation"),_(Ue,"href","#kubernetes-installation"),_(Oe,"href","#uninstall")},m(f,v){n(f,E,v),e(E,A),n(f,P,v),n(f,b,v),e(b,T),n(f,k,v),n(f,w,v),e(w,U),n(f,S,v),n(f,j,v),e(j,le),n(f,I,v),n(f,D,v),e(D,oe),e(D,O),e(O,L),e(D,F),e(D,q),e(q,y),e(D,N),n(f,K,v),n(f,R,v),e(R,ie),n(f,C,v),n(f,G,v),e(G,$),e(G,m),e(m,M),e(G,ye),e(G,Z),e(Z,Ve),e(G,W),n(f,se,v),n(f,H,v),e(H,he),e(H,je),e(je,qt),e(H,Vt),n(f,ae,v),n(f,g,v),e(g,Mt),n(f,Le,v),n(f,re,v),e(re,qe),e(qe,ke),e(ke,Ht),e(Ht,Jt),e(qe,Je),e(re,Me),e(re,Qe),e(Qe,ee),e(ee,De),e(De,ml),e(Qe,vt),e(re,He),e(re,ht),e(ht,Ue),e(Ue,ne),e(ne,_l),e(ht,Ke),e(re,Et),e(re,mt),e(mt,Oe),e(Oe,V),e(V,_t),e(mt,Xe),n(f,Qt,v),n(f,Ze,v),e(Ze,bt),n(f,ge,v),n(f,Ce,v),e(Ce,Re),n(f,Xt,v),n(f,Y,v),e(Y,wt),e(Y,et),e(et,Zt),e(Y,tt),e(Y,bl),e(bl,J),e(Y,Ge),e(Y,Ut),e(Ut,gt),e(Y,ze),n(f,el,v),n(f,lt,v),e(lt,Pe),n(f,Sl,v),n(f,ot,v),e(ot,Q),n(f,tl,v),n(f,de,v),e(de,Kt),n(f,yt,v),n(f,it,v),e(it,kt),n(f,st,v),n(f,at,v),e(at,X),e(X,Ee),n(f,Dt,v),n(f,Ot,v),e(Ot,ll),n(f,Ie,v),n(f,rt,v),e(rt,ol),e(rt,Fe),e(Fe,nt),n(f,ft,v),n(f,me,v),e(me,to),n(f,ct,v),n(f,xe,v),e(xe,wl),n(f,fe,v),n(f,z,v),e(z,yl),n(f,Te,v),n(f,Ye,v),e(Ye,ut),e(ut,kl),n(f,Ct,v),n(f,Ne,v),e(Ne,Dl),n(f,il,v),n(f,ce,v),e(ce,Rt),e(Rt,Gt),n(f,c,v),n(f,h,v),e(h,Ol),e(h,Be),e(Be,sl),e(h,Pt),e(h,dt),e(dt,Cl),n(f,It,v),n(f,zt,v),e(zt,Pl),n(f,$e,v),n(f,pe,v),e(pe,jl),e(pe,We),e(We,al),e(pe,Ll),n(f,rl,v),n(f,B,v),e(B,nl),e(B,Ft),e(Ft,x),e(B,ql),e(B,xt),e(xt,Ml),e(B,Hl),e(B,Ae),e(Ae,Ul),e(B,lo),n(f,Yt,v),n(f,pt,v),e(pt,oo),e(pt,ue),e(ue,Il),e(pt,Kl),n(f,Tt,v),n(f,Bt,v),e(Bt,Rl),n(f,Nt,v),n(f,At,v),e(At,Gl),e(At,ve),e(ve,St),e(At,zl),n(f,fl,v),n(f,_e,v),e(_e,Ko),e(_e,Fl),e(Fl,Se),e(_e,Ro),n(f,Yl,v),n(f,Bl,v),e(Bl,Go)},p:we,i:we,o:we,d(f){f&&t(E),f&&t(P),f&&t(b),f&&t(k),f&&t(w),f&&t(S),f&&t(j),f&&t(I),f&&t(D),f&&t(K),f&&t(R),f&&t(C),f&&t(G),f&&t(se),f&&t(H),f&&t(ae),f&&t(g),f&&t(Le),f&&t(re),f&&t(Qt),f&&t(Ze),f&&t(ge),f&&t(Ce),f&&t(Xt),f&&t(Y),f&&t(el),f&&t(lt),f&&t(Sl),f&&t(ot),f&&t(tl),f&&t(de),f&&t(yt),f&&t(it),f&&t(st),f&&t(at),f&&t(Dt),f&&t(Ot),f&&t(Ie),f&&t(rt),f&&t(ft),f&&t(me),f&&t(ct),f&&t(xe),f&&t(fe),f&&t(z),f&&t(Te),f&&t(Ye),f&&t(Ct),f&&t(Ne),f&&t(il),f&&t(ce),f&&t(c),f&&t(h),f&&t(It),f&&t(zt),f&&t($e),f&&t(pe),f&&t(rl),f&&t(B),f&&t(Yt),f&&t(pt),f&&t(Tt),f&&t(Bt),f&&t(Nt),f&&t(At),f&&t(fl),f&&t(_e),f&&t(Yl),f&&t(Bl)}}}class Wc extends Wi{constructor(E){super(),Vi(this,E,null,$c,Ji,{})}}var Vc=Object.freeze(Object.defineProperty({__proto__:null,default:Wc},Symbol.toStringTag,{value:"Module"}));function Jc(Wt){let E,A,P,b,T;return{c(){E=s("h1"),A=l("Tutorial"),P=u(),b=s("p"),T=l("TODO")},l(k){E=a(k,"H1",{});var w=r(E);A=o(w,"Tutorial"),w.forEach(t),P=d(k),b=a(k,"P",{});var U=r(b);T=o(U,"TODO"),U.forEach(t)},m(k,w){n(k,E,w),e(E,A),n(k,P,w),n(k,b,w),e(b,T)},p:we,i:we,o:we,d(k){k&&t(E),k&&t(P),k&&t(b)}}}class Qc extends Wi{constructor(E){super(),Vi(this,E,null,Jc,Ji,{})}}var Xc=Object.freeze(Object.defineProperty({__proto__:null,default:Qc},Symbol.toStringTag,{value:"Module"}));const gc=()=>Object.entries({"../modules/cli/DESIGN.md":Mc,"../modules/cli/README.md":Kc,"../modules/documentation/PREREQ.md":zc,"../modules/documentation/README.md":Bc,"../modules/documentation/SETUP.md":Vc,"../modules/documentation/TUTORIAL.md":Xc}).map(([A,P])=>{var k;const[b,T]=((k=A==null?void 0:A.replace(/(\.\.\/modules\/)|(\.md)/gi,""))!=null?k:"").split("/");return{path:`${b}/${T}`,source:b,title:T,content:P.default}});export{gc as g};
